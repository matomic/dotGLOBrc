# enable ssh-agent and gpg-agentj
[ -x "`which keychain`" ] && eval `keychain --eval id_dsa 2> /dev/null`

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
  xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes
if [ -n "$force_color_prompt" ]; then
  if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
  else
    color_prompt=${color_prompt}
  fi
fi

# ANSI color codes
FGCBLK='[30m' # Black - Foreground
FGCRED='[31m' # Red
FGCGRN='[32m' # Green
FGCYLW='[33m' # Yellow
FGCBLU='[34m' # Blue
FGCPUR='[35m' # Purple
FGCCYN='[36m' # Cyan
FGCWHT='[37m' # White
BGCBLK='[40m' # Black - Background
BGCRED='[41m' # Red
BGCGRN='[42m' # Green
BGCYLW='[43m' # Yellow
BGCBLU='[44m' # Blue
BGCPUR='[45m' # Purple
BGCCYN='[46m' # Cyan
BGCWHT='[47m' # White
TXTRST='[0m'  # Text Reset
TXTBLD='[1m'  # Revert fg and bg color
TXTUND='[4m'  # underline
TXTINV='[7m'  # Revert fg and bg color

if [ "$color_prompt" = yes ]; then
  PS1="\[$TXTBLD\]\[$FGCRED\]\h:\[$FGCPUR\]\W \[$FGCGRN\]\u\[$TXTRST\]\\$ "

  if ls --color >& /dev/null; then
    alias ls='ls --color=auto';
  else
    alias ls='ls -G';
  fi
else
  PS1="\h:\W \u \\$";
fi

PS2="> $RS"
unset color_prompt force_color_prompt

## alias
alias ll='ls -lh'
alias mv='mv -i'
alias rm='rm -i'

alias slideshow='xrandr --output VGA --mode 800x600 --auto'
alias rsync='rsync -e ssh'

# Ubuntu-centric
if [ -f /etc/ubuntu-release ]; then
  alias apt-search='apt-cache search --names-only'
  alias apt-policy='apt-cache policy'
fi

# Gentoo-centric
if [ -f /etc/gentoo-release ]; then
  alias viuse='sudo vi /etc/portage/package.use'
  alias vikey='sudo vi /etc/portage/package.keywords'
  alias viumsk='sudo vi /etc/portage/package.unmask'
  alias vimsk='sudo vi /etc/portage/package.mask'
fi

# use server/client mode for gvim
g() {
  gvim --remote-silent $*
}

# generates random password
genpasswd() {
  local l=$1
  [ -z "$l" ] && l=20
  tr -dc A-Za-z0-9_ < /dev/urandom | head -c ${l} | xargs
}

# usage scpdiff [DIFFOPTS] LFILE RFILE
# assumes the last two arguments to be the files to be compared
scpdiff() {
  local DIFFOPTS="";
  local LFILE=""; local fl='';
  local FILECOUNT=0;
  local RFILE=""; local fr='';

  while (( "$#" )); do
    if [ "$#" -gt 2 ]; then
      DIFFOPTS="${DIFFOPTS} ${1}";
    elif [ "$#" -eq 2 ]; then LFILE=$1;
      let "FILECOUNT = FILECOUNT + 1";
    elif [ "$#" -eq 1 ]; then
      RFILE=$1;
      let "FILECOUNT = FILECOUNT + 1";
    fi
    shift;
  done

  [ ! ${FILECOUNT} -eq 2 ] \
  && printf "Needs exactly 2 files to diff.\n" > /dev/stderr \
  && return 1;

  fl="/tmp/$(basename ${LFILE}).l";
  ( ! scp "${LFILE}" ${fl} >& /dev/null ) \
  && printf "${LFILE} Not Found\n" \
  && return 1;
  fr="/tmp/$(basename ${RFILE}).r";
  ( ! scp "${RFILE}" ${fr} >& /dev/null ) \
  && printf "${RFILE} Not Found\n" \
  && return 1;

  # Allows customization using different DIFFTOOL
  [ -z ${DIFFTOOL} ] && local DIFFTOOL="diff";
  ${DIFFTOOL} ${DIFFOPTS} ${fl} ${fr};

  rm -f ${fl} ${fr};
}
