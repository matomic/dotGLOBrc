# enable ssh-agent and gpg-agentj
[ -x "`which keychain 2> /dev/null `" ] && eval `keychain --agents gpg,ssh --eval id_dsa 2> /dev/null`

## Colorful settings {{{
# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes
if [ -n "$force_color_prompt" ]; then
  if [ -x "`which tput 2> /dev/null `" ] && tput setaf 1 >&/dev/null; then
    # We have color support; assume it's compliant with Ecma-48
    # (ISO/IEC-6429). (Lack of such support is extremely rare, and such
    # a case would tend to support setf rather than setaf.)
    color_prompt=yes
  else
    color_prompt=${color_prompt}
  fi
fi

# ANSI color codes {{{
FGCBLK='[30m' # Black - Foreground
FGCRED='[31m' # Red
FGCGRN='[32m' # Green
FGCYLW='[33m' # Yellow
FGCBLU='[34m' # Blue
FGCPUR='[35m' # Purple
FGCCYN='[36m' # Cyan
FGCWHT='[37m' # White
BGCBLK='[40m' # Black - Background
BGCRED='[41m' # Red
BGCGRN='[42m' # Green
BGCYLW='[43m' # Yellow
BGCBLU='[44m' # Blue
BGCPUR='[45m' # Purple
BGCCYN='[46m' # Cyan
BGCWHT='[47m' # White
TXTRST='[0m'  # Text Reset
TXTBLD='[1m'  # Revert fg and bg color
TXTUND='[4m'  # underline
TXTINV='[7m'  # Revert fg and bg color
# }}}

if [ "$color_prompt" = yes ]; then
  if [ ! ${EUID} = "0" ]; then
    PS1="\[$TXTBLD\]\[$FGCRED\]\h:\[$FGCPUR\]\W \[$FGCGRN\]\u\[$TXTRST\]\\$ "
  else
    PS1="[\[$TXTBLD\]\[$FGCRED\]\u@\[$FGCPUR\]\h \[$FGCGRN\]\W\[$TXTRST\]]# "
  fi

  if ls --color >& /dev/null; then
    alias ls='ls --color=auto';
  else
    alias ls='ls -G';
  fi
else
  if [ ! ${EUID} = "0" ]; then
    PS1="\h:\W \u \\$";
  fi
fi

PS2="> $RS"
unset color_prompt force_color_prompt
## }}}

## alias {{{
alias ll='ls -lh'
alias mv='mv -i'
alias rm='rm -i'
alias svi='sudo vi'
alias sshfs='sshfs -o follow_symlinks'

alias slideshow='xrandr --output VGA1 --mode 800x600 --pos 111x0'
alias rsync='rsync -e ssh --exclude-from ~/.rsync/excludes'

# Ubuntu-centric
pkgbin=`which aptitude 2> /dev/null`
if [ "x$pkgbin" != "x" ]; then
  alias apt-search='apt-cache search --names-only'
  alias apt-policy='apt-cache policy'
fi

# Gentoo-centric
pkgbin=`which ebuild 2> /dev/null`
if [ "x$pkgbin" != "x" ]; then
  alias vmconf='sudo vi /etc/make.conf'
  alias vmuse='sudo vi /etc/make.use.conf'
  alias vpuse='sudo vi /etc/portage/package.use'
  alias vpkws='sudo vi /etc/portage/package.keywords'
  alias vpumsk='sudo vi /etc/portage/package.unmask'
  alias vpmsk='sudo vi /etc/portage/package.mask'
fi
unset pkgbin
### }}}

## useful functions {{{
# use server/client mode for gvim
g() {
  if [ "x$1" = "x" ]
  then
    gvim
  else
    if [ -z "`gvim --serverlist`" ]
    then
      printf "gvim $*\n"
      gvim $*
    else
      printf "gvim --remote-silent $*\n"
      gvim --remote-silent $*
    fi
  fi
}

# generates a random integer
random() {
  dd if=/dev/urandom count=1 2> /dev/null | cksum | cut -f1 -d" "
}

# generates random password
genpasswd() {
  local l=$1
  [ -z "$l" ] && l=20
  tr -dc A-Za-z0-9_ < /dev/urandom | head -c ${l} | xargs
}
## }}}
