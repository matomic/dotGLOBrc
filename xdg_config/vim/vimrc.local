" {{{ Syntax highlighting settings
" Switch syntax highlighting on, when the terminal has colors
" Also switch on highlighting the last used search pattern.
if &t_Co > 2 || has("gui_running")
  syntax on
  set hlsearch
endif
" }}}

" {{{ Filetype plugin settings
" Enable plugin-provided filetype settings, but only if the ftplugin
" directory exists (which it won't on livecds, for example).
if isdirectory(expand("$VIMRUNTIME/ftplugin"))
  filetype plugin on

  " Uncomment the next line (or copy to your ~/.vimrc) for plugin-provided
  " indent settings. Some people don't like these, so we won't turn them 
  " on by default.
  filetype indent on
endif
" }}}

" The following are commented out as they cause vim to behave a lot
" differently from regular Vi. They are highly recommended though.
set showcmd             " Show (partial) command in status line.
set showmatch           " Show matching brackets.
"set ignorecase         " Do case insensitive matching
set smartcase           " Do smart case matching
set incsearch           " Incremental search
"set autowrite          " Automatically save before commands like :next and :make
set hidden              " Hide buffers when they are abandoned
"set mouse=a            " Enable mouse usage (all modes) in terminals
set viminfo='20,\"500   " Keep a .viminfo file.

" When doing tab completion, give the following files lower priority. You
" may wish to set 'wildignore' to completely ignore files, and 'wildmenu' to
" enable enhanced tab completion. These can be done in the user vimrc file.
set suffixes+=.info,.aux,.log,.dvi,.pdf,.ps,.eps,.bbl,.out,.o,.lo

set grepprg=grep\ -nH\ $*

" tags search order: .tags and .TAGS in current file dir, followed by
" tags/TAGS from current working dir recursively back up to $HOME
set tags=./tags,./TAGS,tags;~,TAGS;~

" line number setting
set number
set relativenumber " show relative number
set scrolloff=10   " vertical padding

" Up, Down move up/down by "screen lines"
" j k (default) move down/up by "file lines"
nmap  <Down> gj
nmap  <Up>   gk
if exists("*pumvisible")
  inoremap <expr>   <Down>    pumvisible() ? "\<lt>Down>" : "\<lt>C-O>gj"
  inoremap <expr>   <Up>      pumvisible() ? "\<lt>Up>"   : "\<lt>C-O>gk"
else
  inoremap <Down> <C-O>gj
  inoremap <Up>   <C-O>gk
endif
