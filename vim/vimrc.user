"" PATHOGEN {
filetype off
"call pathogen#incubate()
let g:pathogen_disabled = []
call add(g:pathogen_disabled, 'vim-snipmate')
call pathogen#infect('bundle/{}')
"call pathogen#helptags() "call this when installing new plugins
"call pathogen#infect()

""" BUNDLES {
"virtualenv
let g:virtualenv_directory = '~/.virtualenv'

"syntastic
let g:syntastic_mode_map = { 'mode': 'active',
      \ 'active_filetypes': [],
      \ 'passive_filetypes': [] }

"snipmate
""" } end bundle

""" } end pathogen

"" INCLUDES {
if filereadable(expand("$HOME/.vimrc.local"))
  so $HOME/.vimrc.local
elseif filereadable(expand("$HOME/.vim/vimrc.local"))
  so $HOME/.vim/vimrc.local
elseif filereadable(expand("$HOME/_vimrc.local"))
  so $HOME/_vimrc.local
elseif filereadable(expand("$VIM/_vimrc.local"))
  so $VIM/_vimrc.local
else
  filetype plugin indent on
endif

"if filereadable(expand("~/.vimrc_background"))
"  let base16colorspace=256
"  source ~/.vimrc_background
"endif
"" } end includes

so $HOME/.vim/funcdef.vim
so $HOME/.vim/keymaps.vim
so $HOME/.vim/colors.vim
so $HOME/.vim/autocmd.vim

"" BASIC OPTIONS {
set shiftwidth=4       " number of spaces to use for autoindenting
set shiftround         " use multiple of shiftwidth when indenting with '<' and '>'
set tabstop=4          " tab size
set noexpandtab        " use space for tab
set smarttab           " use sw for front tab, ts else
set showmatch          " show matching bracket
set ffs=unix,dos       " refers unix format

set nolz               " (lazyredraw) Don't update the display while executing macro
set showmode           " Show which mode you are in
set modeline           " Use modeline to customize setting
set wildmenu           " Enalbed enhanced command-line completion
set mousehide          " hide mouse cursor while typing
set shellslash         " (for windows) use \ for shell
set laststatus=2       " always put a status line in, even if there is only one window
"set diffopt+=iwhite    " ignore white space
set diffopt+=vertical  " not sure why this is not the default.
if exists("&cot")      " (version >= 7.2)
  set cot=longest,menu " complete option
en

set backspace=indent,eol,start " so that backspace works in Windows:
set nobackup
set noswapfile

set list
set listchars=eol:$,tab:>.,trail:.,extends:#,nbsp:.

set number
set relativenumber " show relative number
set scrolloff=15   " vertical padding

" my settings
" Set the status line the way I like it
set stl=%f\ %m[%{&fileformat}]\ %r\ Line:\ %l/%L[%p%%]\ Col:\ %c[hi:%{SyntaxItem()}]\ Buf:\ #%n\ [%b][0x%B]
"" } end basic

"" vim:fenc=utf-8 tw=80 sw=2 sts=2 et foldmethod=marker foldmarker={,} foldlevel=0 iskeyword+=-
